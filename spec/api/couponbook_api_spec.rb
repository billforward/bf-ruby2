=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::CouponbookApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CouponbookApi' do
  before do
    # run before each test
    @instance = Bfwd::CouponbookApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CouponbookApi' do
    it 'should create an instance of CouponbookApi' do
      expect(@instance).to be_instance_of(Bfwd::CouponbookApi)
    end
  end

  # unit tests for create_coupon_book
  # Create a coupon-book.
  # {\&quot;nickname\&quot;:\&quot;Create a new coupon book\&quot;,\&quot;request\&quot;:\&quot;createCouponBookRequest.html\&quot;,\&quot;response\&quot;:\&quot;createCouponBookResponse.html\&quot;}
  # @param coupon_book The coupon-book object to be created.
  # @param [Hash] opts the optional parameters
  # @return [CouponBookPagedMetadata]
  describe 'create_coupon_book test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_coupon_book
  # Retire a coupon-book, specified by the coupon-book-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Delete coupon book\&quot;,\&quot;response\&quot;:\&quot;deleteCouponBookByID.html\&quot;}
  # @param coupon_book_id ID of the coupon-book.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CouponBookPagedMetadata]
  describe 'delete_coupon_book test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_attachable_coupon_books
  # Returns a collection of attachable coupon-books. An attachable coupon-book has at least one remaining use, and is not deleted. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get all attachable coupon books\&quot;,\&quot;response\&quot;:\&quot;getCouponBookAllAttachable.html\&quot;}
  # @param attachableness The attachableness of the coupon-book.
  # @param has_code Whether the coupon-books have book codes or not.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first coupon-book to return.
  # @option opts [Integer] :records The maximum number of coupon-books to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [CouponBookPagedMetadata]
  describe 'get_all_attachable_coupon_books test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_coupon_books
  # Returns a collection of coupon-books. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get all coupon books\&quot;,\&quot;response\&quot;:\&quot;getCouponBookAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first coupon-books to return.
  # @option opts [Integer] :records The maximum number of coupon-books to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired coupon-books should be returned.
  # @return [CouponBookPagedMetadata]
  describe 'get_all_coupon_books test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupon_book_by_book_code
  # Returns a single coupon-book, specified by the book-code parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by book code\&quot;,\&quot;response\&quot;:\&quot;getCouponBookByBookCode.html\&quot;}
  # @param book_code The unique coupon-book-code.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CouponBookPagedMetadata]
  describe 'get_coupon_book_by_book_code test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupon_book_by_coupon_book_definition_id
  # Returns a collection of coupon-books, specified by coupon-book-definition-ID parameter. By default 10 coupon-books are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by coupon book definition\&quot;,\&quot;response\&quot;:\&quot;getCouponBookByCouponBookDefinitionID.html\&quot;}
  # @param coupon_book_definition_id The string coupon-book-definition-ID of the coupon-book.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first coupon-book to return.
  # @option opts [Integer] :records The maximum number of coupon-books to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired coupon-books should be returned.
  # @return [CouponBookPagedMetadata]
  describe 'get_coupon_book_by_coupon_book_definition_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupon_book_by_coupon_code
  # Returns a single coupon-book, specified by the coupon-code parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by coupon code\&quot;,\&quot;response\&quot;:\&quot;getCouponBookByBookCode.html\&quot;}
  # @param coupon_code The unique coupon-code.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CouponBookPagedMetadata]
  describe 'get_coupon_book_by_coupon_code test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupon_book_by_id
  # Returns a single coupon-book, specified by the coupon-book-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve an existing coupon book\&quot;,\&quot;response\&quot;:\&quot;getCouponBookByID.html\&quot;}
  # @param coupon_book_id ID of the coupon-book.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CouponBookPagedMetadata]
  describe 'get_coupon_book_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_coupon_book
  # Update a coupon-book.
  # {\&quot;nickname\&quot;:\&quot;Update a coupon book\&quot;,\&quot;request\&quot;:\&quot;updateCouponBookRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateCouponBookResponse.html\&quot;}
  # @param coupon_book The coupon-book object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [CouponBookPagedMetadata]
  describe 'update_coupon_book test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
