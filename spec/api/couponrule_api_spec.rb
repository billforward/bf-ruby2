=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::CouponruleApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CouponruleApi' do
  before do
    # run before each test
    @instance = Bfwd::CouponruleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CouponruleApi' do
    it 'should create an instance of CouponruleApi' do
      expect(@instance).to be_instance_of(Bfwd::CouponruleApi)
    end
  end

  # unit tests for create_coupon_rule
  # Create a coupon-rule.
  # {\&quot;nickname\&quot;:\&quot;Create a new rule\&quot;, \&quot;request\&quot; : \&quot;createCouponRuleRequest.html\&quot; ,\&quot;response\&quot; : \&quot;createCouponRuleResponse.html\&quot; }
  # @param coupon_rule The coupon-rule object to be created.
  # @param [Hash] opts the optional parameters
  # @return [CouponRulePagedMetadata]
  describe 'create_coupon_rule test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_coupon_rule
  # Retire a coupon-rule, specified by the coupon-rule-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Delete a rule\&quot;,\&quot;response\&quot; : \&quot;deleteCouponRuleByID.html\&quot;}
  # @param coupon_rule_id ID of the coupon-rule.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CouponRulePagedMetadata]
  describe 'delete_coupon_rule test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_coupon_rules
  # Returns a collection of coupon-rules. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get all rules\&quot;,\&quot;response\&quot; : \&quot;getCouponRuleAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first product-rate-plan to return.
  # @option opts [Integer] :records The maximum number of product-rate-plans to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [CouponRulePagedMetadata]
  describe 'get_all_coupon_rules test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupon_rule_by_coupon_definition_id
  # Returns a single coupon-definition, specified by the coupon-definition-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by coupon definition\&quot;,\&quot;response\&quot; : \&quot;getCouponRuleByCouponDefinitionID.html\&quot;}
  # @param coupon_definition_id ID of the coupon-definition.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CouponRulePagedMetadata]
  describe 'get_coupon_rule_by_coupon_definition_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupon_rule_by_id
  # Returns a single coupon-rule, specified by the coupon-rule-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve an existing rule\&quot;,\&quot;response\&quot; : \&quot;getCouponRuleByID.html\&quot;}
  # @param coupon_rule_id ID of the coupon-rule.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CouponRulePagedMetadata]
  describe 'get_coupon_rule_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
