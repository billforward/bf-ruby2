=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::ChargesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ChargesApi' do
  before do
    # run before each test
    @instance = Bfwd::ChargesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChargesApi' do
    it 'should create an instance of ChargesApi' do
      expect(@instance).to be_instance_of(Bfwd::ChargesApi)
    end
  end

  # unit tests for batch_recalculate_subscription_charge
  # Recalculate a batch of charges.
  # {\&quot;nickname\&quot;:\&quot;Batch re-calculate charges\&quot;,\&quot;request\&quot;:\&quot;batchRecalculateChargeRequest.html\&quot;,\&quot;response\&quot;:\&quot;batchRecalculateChargeResponse.html\&quot;}
  # @param request The batch charge request.
  # @param [Hash] opts the optional parameters
  # @return [RecalculateChargeBatchResponsePagedMetadata]
  describe 'batch_recalculate_subscription_charge test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_subscription_charges
  # Retrieves a collection of all charges. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve all charges\&quot;,\&quot;response\&quot;:\&quot;getChargeAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [SubscriptionChargePagedMetadata]
  describe 'get_all_subscription_charges test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscription_charge_by_account_id
  # Retrieves a collection of charges, specified by the account-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by account\&quot;,\&quot;response\&quot;:\&quot;getChargeByAccount.html\&quot;}
  # @param account_id The string ID of the account
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [SubscriptionChargePagedMetadata]
  describe 'get_subscription_charge_by_account_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscription_charge_by_id
  # Retrieves a single charge, specified by the charge-id parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve a charge\&quot;,\&quot;response\&quot;:\&quot;getChargeByID.html\&quot;}
  # @param charge_id The unique string-ID of the subscription.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [SubscriptionChargePagedMetadata]
  describe 'get_subscription_charge_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscription_charge_by_state
  # Retrieves a collection of charges, specified by the state parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by state\&quot;,\&quot;response\&quot;:\&quot;getChargeByState.html\&quot;}
  # @param state The current state of the charge
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [SubscriptionChargePagedMetadata]
  describe 'get_subscription_charge_by_state test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscription_charge_by_version_id
  # Retrieves a single charge, specified by the version-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by version\&quot;,\&quot;response\&quot;:\&quot;getChargeByVersionID.html\&quot;}
  # @param version_id The version-ID of the charge.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [SubscriptionChargePagedMetadata]
  describe 'get_subscription_charge_by_version_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for recalculate_subscription_charge
  # Recalculate a charge.
  # {\&quot;nickname\&quot;:\&quot;Re-calculate a charge\&quot;,\&quot;request\&quot;:\&quot;recalculateChargeRequest.html\&quot;,\&quot;response\&quot;:\&quot;recalculateChargeResponse.html\&quot;}
  # @param charge_id Unique id of the charge.
  # @param charge The charge to be re-calculated.
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionChargePagedMetadata]
  describe 'recalculate_subscription_charge test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for void_subscription_charge
  # Void the charge with the specified charge-ID.
  # {\&quot;nickname\&quot;:\&quot;Void charge\&quot;,\&quot;response\&quot;:\&quot;deleteCharge.html\&quot;}
  # @param charge_id Unique id of the charge.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [SubscriptionChargePagedMetadata]
  describe 'void_subscription_charge test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
