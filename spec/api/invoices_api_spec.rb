=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::InvoicesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'InvoicesApi' do
  before do
    # run before each test
    @instance = Bfwd::InvoicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InvoicesApi' do
    it 'should create an instact of InvoicesApi' do
      expect(@instance).to be_instance_of(Bfwd::InvoicesApi)
    end
  end

  # unit tests for add_charge_to_invoice
  # Creates a charge on the specified invoice.
  # {\&quot;nickname\&quot;:\&quot;Add to invoice\&quot;,\&quot;response\&quot;:\&quot;addChargeToInvoice.html\&quot;,\&quot;request\&quot;:\&quot;addChargeToInvoiceRequest.html\&quot;}
  # @param invoice_id ID of the invoice.
  # @param charge The charge request
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionChargePagedMetadata]
  describe 'add_charge_to_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for aggregate_invoices
  # Aggregate Invoices into to one parent Invoice
  # {\&quot;nickname\&quot;:\&quot;Aggregate invoices\&quot;,\&quot;response\&quot;:\&quot;AggregateResponse.html\&quot;,\&quot;request\&quot;:\&quot;AggregateRequest.html\&quot;}
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [InvoicePagedMetadata]
  describe 'aggregate_invoices test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for execute_invoice
  # Attempt payment for the outstanding value of an invoice
  # {\&quot;nickname\&quot;:\&quot;Execute invoice\&quot;,\&quot;response\&quot;:\&quot;executeInvoiceResponse.html\&quot;,\&quot;request\&quot;:\&quot;ExecuteInvoiceRequest.html\&quot;}
  # @param invoice_id 
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [InvoicePagedMetadata]
  describe 'execute_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_line_payments_for_all_invoices
  # Generates InvoiceLinePayments for all existing InvoicePayments.
  # { \&quot;nickname\&quot; : \&quot;Generate InvoiceLinePayments\&quot;,\&quot;response\&quot; : \&quot;Generate InvoiceLinePayments.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [InvoiceLinePaymentPagedMetadata]
  describe 'generate_line_payments_for_all_invoices test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_invoices
  # Retrieves a collection of all invoices. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve all invoices\&quot;,\&quot;response\&quot; : \&quot;getInvoiceAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @option opts [BOOLEAN] :exclude_children Should child invoices be excluded.
  # @option opts [String] :metadata 
  # @return [InvoicePagedMetadata]
  describe 'get_all_invoices test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_invoices_as_csv
  # Retrieves a collection of all invoices. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve all invoices\&quot;,\&quot;response\&quot; : \&quot;getInvoiceAll.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [InvoicePagedMetadata]
  describe 'get_all_invoices_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bucketed_revenue_attributions_as_csv
  # Retrieves (as CSV) all attributions of Invoice costs to Invoice lines, bucketed.
  # { \&quot;nickname\&quot; : \&quot;(CSV) Retrieve bucketed revenue attributions\&quot;,\&quot;response\&quot; : \&quot;getBucketedRevenueAttributions.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which revenue attributions will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which revenue attributions will be recognised (example input: 2015-10-13T11:50:24).
  # @return [String]
  describe 'get_bucketed_revenue_attributions_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_charges_on_invoice
  # Returns all charges for the specified invoice. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;List on invoice\&quot;,\&quot;response\&quot;:\&quot;getChargesInvoice.html\&quot;}
  # @param invoice_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [String] :state Ihe direction of any ordering, either ASC or DESC.
  # @option opts [String] :type Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [SubscriptionChargePagedMetadata]
  describe 'get_charges_on_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credit_invoice_line_payments_from_invoices_as_csv
  # Retrieves credit note-paid from InvoicePayments upon line items, in CSV format.
  # { \&quot;nickname\&quot; : \&quot;Credit InvoiceLinePayments CSV\&quot;,\&quot;response\&quot; : \&quot;Credit InvoiceLinePayments.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which credit payments will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which credit payments will be recognised (example input: 2015-10-13T11:50:24).
  # @return [InvoiceLinePaymentPagedMetadata]
  describe 'get_credit_invoice_line_payments_from_invoices_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credit_invoice_line_payments_from_invoices_as_csv_by_payment_received
  # Retrieves credit note-paid from InvoicePayments upon line items, in CSV format.
  # { \&quot;nickname\&quot; : \&quot;Credit InvoiceLinePayments CSV\&quot;,\&quot;response\&quot; : \&quot;Credit InvoiceLinePayments.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which credit payments will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which credit payments will be recognised (example input: 2015-10-13T11:50:24).
  # @return [InvoiceLinePaymentPagedMetadata]
  describe 'get_credit_invoice_line_payments_from_invoices_as_csv_by_payment_received test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_debit_invoice_line_payments_from_invoices_as_csv
  # Retrieves received revenue from InvoicePayments upon line items, in CSV format.
  # { \&quot;nickname\&quot; : \&quot;Debit InvoiceLinePayments CSV\&quot;,\&quot;response\&quot; : \&quot;Debit InvoiceLinePayments.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which revenue will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which revenue will be recognised (example input: 2015-10-13T11:50:24).
  # @return [InvoiceLinePaymentPagedMetadata]
  describe 'get_debit_invoice_line_payments_from_invoices_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_debit_invoice_line_payments_from_invoices_as_csv_by_payment_received
  # Retrieves received revenue from InvoicePayments upon line items, in CSV format.
  # { \&quot;nickname\&quot; : \&quot;Debit InvoiceLinePayments CSV\&quot;,\&quot;response\&quot; : \&quot;Debit InvoiceLinePayments.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which revenue will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which revenue will be recognised (example input: 2015-10-13T11:50:24).
  # @return [InvoiceLinePaymentPagedMetadata]
  describe 'get_debit_invoice_line_payments_from_invoices_as_csv_by_payment_received test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice_as_html
  # Retrieves a single invoice specified by the ID parameter.
  # { \&quot;nickname\&quot; : \&quot;HTML invoice\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByID.HTML.html\&quot;}
  # @param id The ID of the invoice.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @option opts [BOOLEAN] :tier_breakdown Whether to provide a breakdown of charge tiering.
  # @option opts [BOOLEAN] :inclusive_end Whether to present in the Invoice date range only those dates whose entirety are involved in the billing period. In other words: when true, this subtracts 1 from the \&quot;period end\&quot; date shown to the customer.
  # @option opts [BOOLEAN] :show_zero_cost Whether to show zero-cost lines.
  # @option opts [BOOLEAN] :show_plan_only_when_ambiguous Whether to state which plan the Invoice lines came from, regardless of whether there&#39;s only one plan involved in this Invoice.
  # @return [String]
  describe 'get_invoice_as_html test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice_as_pdf
  # Retrieves a single invoice specified by the ID parameter.
  # { \&quot;nickname\&quot; : \&quot;PDF Invoice\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByID.pdf\&quot;}
  # @param id The ID of the invoice.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @option opts [BOOLEAN] :tier_breakdown Whether to provide a breakdown of charge tiering.
  # @option opts [BOOLEAN] :inclusive_end Whether to present in the Invoice date range only those dates whose entirety are involved in the billing period. In other words: when true, this subtracts 1 from the \&quot;period end\&quot; date shown to the customer.
  # @option opts [BOOLEAN] :show_zero_cost Whether to show zero-cost lines.
  # @option opts [BOOLEAN] :show_plan_only_when_ambiguous Whether to state which plan the Invoice lines came from, regardless of whether there&#39;s only one plan involved in this Invoice.
  # @option opts [BOOLEAN] :include_footer 
  # @option opts [String] :group_line_items_by 
  # @return [File]
  describe 'get_invoice_as_pdf test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice_by_id
  # Retrieves a single invoice specified by the invoice-ID parameter.
  # { \&quot;nickname\&quot; : \&quot;Retrieve an existing invoice\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByID.html\&quot;}
  # @param invoice_id The ID of the invoice.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @option opts [BOOLEAN] :exclude_children Should child invoices be excluded.
  # @return [InvoicePagedMetadata]
  describe 'get_invoice_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice_by_id_as_csv
  # Retrieves a single invoice specified by the ID parameter.
  # { \&quot;nickname\&quot; : \&quot;CSV invoice\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByID.csv\&quot;}
  # @param id The ID of the invoice.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [String]
  describe 'get_invoice_by_id_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice_by_subscription_id
  # Retrieves a collection of invoices specified by the subscription-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by subscription\&quot;,\&quot;response\&quot; : \&quot;getInvoiceBySubscriptionID.html\&quot;}
  # @param subscription_id ID of the subscription.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @option opts [BOOLEAN] :exclude_children Should child invoices be excluded.
  # @return [InvoicePagedMetadata]
  describe 'get_invoice_by_subscription_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice_by_subscription_version_id
  # Retrieves a collection of invoices specified by the subscription-version-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by subscription version\&quot;,\&quot;response\&quot; : \&quot;getInvoiceBySubscriptionVersionID.html\&quot;}
  # @param subscription_version_id Version ID of the subscription.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @option opts [BOOLEAN] :exclude_children Should child invoices be excluded.
  # @return [InvoicePagedMetadata]
  describe 'get_invoice_by_subscription_version_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice_by_version_id
  # Retrieves a single invoice, specified by the version-ID parameter.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by version\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByVersionID.html\&quot;}
  # @param version_id The version-ID of the invoice.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [InvoicePagedMetadata]
  describe 'get_invoice_by_version_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices_by_account_id
  # Retrieves a collection of invoices specified by the account-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by account\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByAccountID.html\&quot;}
  # @param account_id ID of the account.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @option opts [BOOLEAN] :exclude_children Should child invoices be excluded.
  # @return [InvoicePagedMetadata]
  describe 'get_invoices_by_account_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices_by_period_end
  # Retrieves a collection of invoice objects with period-end times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by period-end\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByPeriodEnd.html\&quot;}
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [InvoicePagedMetadata]
  describe 'get_invoices_by_period_end test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices_by_period_start
  # Retrieves a collection of invoice objects with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by period-start\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByPeriodStart.html\&quot;}
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [InvoicePagedMetadata]
  describe 'get_invoices_by_period_start test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices_by_period_start_as_csv
  # Retrieves a collection of invoice objects with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by period-start\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByPeriodStart.csv\&quot;}
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [InvoicePagedMetadata]
  describe 'get_invoices_by_period_start_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices_by_state
  # Retrieves a collection of invoices, specified by the state parameter. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by state\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByState.html\&quot;}
  # @param state The current state of the invoice, either Paid, Pending,  Unpaid or Voided.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [InvoicePagedMetadata]
  describe 'get_invoices_by_state test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices_by_state_and_period_start
  # Retrieves a collection of invoice objects specified by the state parameter and with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by state and period-start\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByStateAndPeriodStart.html\&quot;}
  # @param state The current state of the invoice, either Paid, Pending,  Unpaid or Voided.
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [InvoicePagedMetadata]
  describe 'get_invoices_by_state_and_period_start test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices_by_state_and_period_start_as_csv
  # Retrieves a collection of invoice objects specified by the state parameter and with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by state and period-start\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByStateAndPeriodStart.csv\&quot;}
  # @param state The current state of the invoice, either Paid, Pending,  Unpaid or Voided.
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [InvoicePagedMetadata]
  describe 'get_invoices_by_state_and_period_start_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices_by_state_as_csv
  # Retrieves a collection of invoices, specified by the state parameter. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by state\&quot;,\&quot;response\&quot; : \&quot;getInvoiceByState.csv\&quot;}
  # @param state The current state of the invoice, either Paid, Pending,  Unpaid or Voided.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [InvoicePagedMetadata]
  describe 'get_invoices_by_state_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_line_payments
  # Retrieves all InvoiceLine payment attributions.
  # { \&quot;nickname\&quot; : \&quot;Retrieve InvoiceLine payment attributions\&quot;,\&quot;response\&quot; : \&quot;getInvoiceLinePayments.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which line payment attributions will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which line payment attributions will be recognised (example input: 2015-10-13T11:50:24).
  # @option opts [Array<String>] :include_gateway Include attributions only from payments made via these payment gateways. Takes precedence over &#x60;exclude_gateway&#x60; param (if both are provided).
  # @option opts [Array<String>] :exclude_gateway Include attributions from payments made via all payment gateways, except these.
  # @return [InvoiceLinePaymentPagedMetadata]
  describe 'get_line_payments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_line_payments_as_csv
  # Retrieves (as CSV) all InvoiceLine payment attributions.
  # { \&quot;nickname\&quot; : \&quot;(CSV) Retrieve InvoiceLine payment attributions\&quot;,\&quot;response\&quot; : \&quot;getInvoiceLinePayments.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which line payment attributions will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which line payment attributions will be recognised (example input: 2015-10-13T11:50:24).
  # @option opts [Array<String>] :include_gateway Include attributions only from payments made via these payment gateways. Takes precedence over &#x60;exclude_gateway&#x60; param (if both are provided).
  # @option opts [Array<String>] :exclude_gateway Include attributions from payments made via all payment gateways, except these.
  # @return [InvoiceLinePaymentPagedMetadata]
  describe 'get_line_payments_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_metadata_for_invoice
  # Retrieve any associated metadata.
  # {\&quot;nickname\&quot;:\&quot;Retrieve metadata on invoice\&quot;,\&quot;request\&quot;:\&quot;getInvoiceMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;getInvoiceMetadataResponse.html\&quot;}
  # @param invoice_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'get_metadata_for_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_refund_invoice_line_payments_from_invoices_as_csv
  # Retrieves awarded refunds from InvoicePayments upon line items, in CSV format.
  # { \&quot;nickname\&quot; : \&quot;Refund InvoiceLinePayments CSV\&quot;,\&quot;response\&quot; : \&quot;Refund InvoiceLinePayments.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which refunds will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which refunds will be recognised (example input: 2015-10-13T11:50:24).
  # @return [InvoiceLinePaymentPagedMetadata]
  describe 'get_refund_invoice_line_payments_from_invoices_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_refund_invoice_line_payments_from_invoices_as_csv_by_refund_received
  # Retrieves awarded refunds from InvoicePayments upon line items, in CSV format.
  # { \&quot;nickname\&quot; : \&quot;Refund InvoiceLinePayments CSV\&quot;,\&quot;response\&quot; : \&quot;Refund InvoiceLinePayments.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which refunds will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which refunds will be recognised (example input: 2015-10-13T11:50:24).
  # @return [InvoiceLinePaymentPagedMetadata]
  describe 'get_refund_invoice_line_payments_from_invoices_as_csv_by_refund_received test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_revenue_attributions
  # Retrieves all attributions of Invoice costs to Invoice lines.
  # { \&quot;nickname\&quot; : \&quot;Retrieve revenue attributions\&quot;,\&quot;response\&quot; : \&quot;getRevenueAttributions.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which revenue attributions will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which revenue attributions will be recognised (example input: 2015-10-13T11:50:24).
  # @return [RevenueAttributionPagedMetadata]
  describe 'get_revenue_attributions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_revenue_attributions_as_csv
  # Retrieves (as CSV) all attributions of Invoice costs to Invoice lines.
  # { \&quot;nickname\&quot; : \&quot;(CSV) Retrieve revenue attributions\&quot;,\&quot;response\&quot; : \&quot;getRevenueAttributions.csv\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [String] :recognition_start The UTC DateTime specifying the start of the interval within which revenue attributions will be recognised (example input: 2015-09-13T11:50:24).
  # @option opts [String] :recognition_end The UTC DateTime specifying the end of the interval within which revenue attributions will be recognised (example input: 2015-10-13T11:50:24).
  # @return [String]
  describe 'get_revenue_attributions_as_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_swagger_for_invoice
  # 
  # { \&quot;nickname\&quot; : \&quot;\&quot;,\&quot;response\&quot; : \&quot;\&quot;}
  # @param query_string The query string used to search.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The starting index of the search results.
  # @option opts [Integer] :records The number of search results to return.
  # @option opts [String] :format The response format, either JSON or XML.
  # @option opts [BOOLEAN] :wildcard Toggle if we search for full words or whether a wildcard is used.
  # @option opts [BOOLEAN] :entity Is an entity returned with the search results.
  # @return [SwaggerTypeListInv]
  describe 'get_swagger_for_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_invoice
  # Import an invoice.
  # {\&quot;nickname\&quot;:\&quot;Import invoice\&quot;,\&quot;response\&quot;:\&quot;ImportInvoiceResponse.html\&quot;,\&quot;request\&quot;:\&quot;ImportInvoiceRequest.html\&quot;}
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [InvoicePagedMetadata]
  describe 'import_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for recalculate_invoice
  # Re-calculate an Invoice.
  # {\&quot;nickname\&quot;:\&quot;Re-calculate an invoice\&quot;,\&quot;response\&quot;:\&quot;recalculateInvoiceResponse.html\&quot;,\&quot;request\&quot;:\&quot;RecalculateInvoiceRequest.html\&quot;}
  # @param invoice_id 
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [InvoicePagedMetadata]
  describe 'recalculate_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_charge_from_invoice
  # Removes the specified charge from the specified Invoice.
  # {\&quot;nickname\&quot;:\&quot;Remove from invoice\&quot;,\&quot;response\&quot;:\&quot;deleteChargesInvoice.html\&quot;}
  # @param invoice_id 
  # @param charge_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [SubscriptionChargePagedMetadata]
  describe 'remove_charge_from_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_metadata_from_invoice
  # Remove any associated metadata.
  # {\&quot;nickname\&quot;:\&quot;Clear metadata from invoice\&quot;,\&quot;request\&quot; :\&quot;deleteInvoiceMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;deleteInvoiceMetadataResponse.html\&quot;}
  # @param invoice_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'remove_metadata_from_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_metadata_for_invoice
  # Remove any existing metadata keys and create the provided data.
  # {\&quot;nickname\&quot;:\&quot;Set metadata on invoice\&quot;,\&quot;request\&quot;:\&quot;setInvoiceMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;setInvoiceMetadataResponse.html\&quot;}
  # @param metadata 
  # @param invoice_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'set_metadata_for_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_invoice
  # Update an Invoice.
  # {\&quot;nickname\&quot;:\&quot;Update an invoice\&quot;,\&quot;response\&quot;:\&quot;updateInvoiceResponse.html\&quot;,\&quot;request\&quot;:\&quot;updateInvoiceRequest.html\&quot;}
  # @param invoice The invoice object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [InvoicePagedMetadata]
  describe 'update_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upsert_metadata_for_invoice
  # Update any existing metadata key-values and insert any new key-values, no keys will be removed.
  # {\&quot;nickname\&quot;:\&quot;Upsert metadata on invoice\&quot;,\&quot;request\&quot;:\&quot;upsertInvoiceMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;upsertInvoiceMetadataResponse.html\&quot;}
  # @param metadata 
  # @param invoice_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'upsert_metadata_for_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for void_invoice
  # Voids the invoice specified by the invoice identifier parameter.
  # { \&quot;nickname\&quot; : \&quot;Void an invoice\&quot;,\&quot;response\&quot; : \&quot;voidInvoice.html\&quot;}
  # @param invoice_id ID of the invoice.
  # @param organizations A list of organization-IDs used to restrict the scope of API calls.
  # @param [Hash] opts the optional parameters
  # @return [InvoicePagedMetadata]
  describe 'void_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
