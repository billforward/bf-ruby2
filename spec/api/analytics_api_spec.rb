=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::AnalyticsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AnalyticsApi' do
  before do
    # run before each test
    @instance = Bfwd::AnalyticsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AnalyticsApi' do
    it 'should create an instance of AnalyticsApi' do
      expect(@instance).to be_instance_of(Bfwd::AnalyticsApi)
    end
  end

  # unit tests for get_account_debts
  # Gets outstanding debts per account, within a date range.
  # {\&quot;nickname\&quot; : \&quot;Get account debts\&quot;,\&quot;response\&quot; : \&quot;getAccountDebts.html\&quot;}
  # @param debts_per_account The payments-per-account object.
  # @param [Hash] opts the optional parameters
  # @return [AccountPaymentsResultPagedMetadata]
  describe 'get_account_debts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_ltv
  # Gets an account&#39;s life-time value, as of a given end date.
  # {\&quot;nickname\&quot;:\&quot;Get account life-time value\&quot;,\&quot;response\&quot;:\&quot;getAccountLTV.html\&quot;}
  # @param account_id The id of the account.
  # @param end_datetime The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [AccountLTVResultPagedMetadata]
  describe 'get_account_ltv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_payments
  # Gets hourly payments per product, within a date range.
  # {\&quot;nickname\&quot; : \&quot;Get payments per account\&quot;,\&quot;response\&quot; : \&quot;getAccountPayments.html\&quot;}
  # @param payments_per_account The payments-per-account object.
  # @param [Hash] opts the optional parameters
  # @return [AccountPaymentsResultPagedMetadata]
  describe 'get_account_payments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_billforward_managed_payments
  # Gets all payments managed by BillForward, within a date range.
  # {\&quot;nickname\&quot;:\&quot;Get managed payments\&quot;,\&quot;response\&quot;:\&quot;getManagedPayments.html\&quot;}
  # @param start_datetime The UTC DateTime specifying the start of the result period.
  # @param end_datetime The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [BillforwardManagedPaymentsResultPagedMetadata]
  describe 'get_billforward_managed_payments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_churn
  # Gets churn, within a date range.
  # {\&quot;nickname\&quot;:\&quot;Get churn\&quot;,\&quot;response\&quot;:\&quot;getChurn.html\&quot;}
  # @param start_datetime The UTC DateTime specifying the start of the result period.
  # @param end_datetime The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [CassChurnResultPagedMetadata]
  describe 'get_churn test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_debts
  # Gets debts within a date range.
  # {\&quot;nickname\&quot;:\&quot;Get debts\&quot;,\&quot;response\&quot;:\&quot;getDebts.html\&quot;}
  # @param start_datetime The UTC DateTime specifying the start of the result period.
  # @param end_datetime The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [DebtsResultPagedMetadata]
  describe 'get_debts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_payments
  # Gets payments within a date range.
  # {\&quot;nickname\&quot;:\&quot;Get all payments\&quot;,\&quot;response\&quot;:\&quot;getPayments.html\&quot;}
  # @param start_datetime The UTC DateTime specifying the start of the result period.
  # @param end_datetime The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [CassPaymentResultPagedMetadata]
  describe 'get_payments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_product_payments
  # Gets hourly payments per product, within a date range.
  # {\&quot;nickname\&quot; : \&quot;Get payments per product\&quot;,\&quot;response\&quot; : \&quot;getProductPayments.html\&quot;}
  # @param payments_per_product The payments-per-product object.
  # @param [Hash] opts the optional parameters
  # @return [ProductPaymentsResultPagedMetadata]
  describe 'get_product_payments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_product_rate_plan_payments
  # Gets hourly payments per product, within a date range.
  # {\&quot;nickname\&quot; : \&quot;Get payments per rate plan\&quot;,\&quot;response\&quot; : \&quot;getRatePlanPayments.html\&quot;}
  # @param payments_per_product_rate_plan The payments-per-product-rate-plan object.
  # @param [Hash] opts the optional parameters
  # @return [ProductRatePlanPaymentsResultPagedMetadata]
  describe 'get_product_rate_plan_payments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscription_ltv
  # Gets a subscription&#39;s life-time value, as of a given end date.
  # {\&quot;nickname\&quot;:\&quot;Get sub life-time value\&quot;,\&quot;response\&quot;:\&quot;getSubscriptionLTV.html\&quot;}
  # @param subscription_id The id of the subscription.
  # @param end_datetime The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [SubscriptionLTVResultPagedMetadata]
  describe 'get_subscription_ltv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_upgrades
  # Gets upgrades, within a date range.
  # {\&quot;nickname\&quot;:\&quot;Get upgrades\&quot;,\&quot;response\&quot;:\&quot;getUpgrades.html\&quot;}
  # @param start_datetime The UTC DateTime specifying the start of the result period.
  # @param end_datetime The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [CassUpgradeResultPagedMetadata]
  describe 'get_upgrades test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
