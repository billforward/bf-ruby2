=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::AccountsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccountsApi' do
  before do
    # run before each test
    @instance = Bfwd::AccountsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountsApi' do
    it 'should create an instact of AccountsApi' do
      expect(@instance).to be_instance_of(Bfwd::AccountsApi)
    end
  end

  # unit tests for add_credit_note_to_account
  # Creates a credit-note which may be used by any subscription of this account.
  # {\&quot;nickname\&quot;:\&quot;Add Credit\&quot;,\&quot;request\&quot;:\&quot;addCreditNoteToAccountRequest.html\&quot;, \&quot;response\&quot;:\&quot;addCreditNoteToAccount.html\&quot;}
  # @param account_id ID of the account.
  # @param credit_note The credit-note request
  # @param [Hash] opts the optional parameters
  # @return [CreditNotePagedMetadata]
  describe 'add_credit_note_to_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_permission_to_account
  # Add a role to the account
  # {\&quot;nickname\&quot;:\&quot;Add Role\&quot;,\&quot;response\&quot;:\&quot;addRoleToAccountResponse.html\&quot;,\&quot;request\&quot;:\&quot;addRoleToAccountRequest.html\&quot;}
  # @param account_id ID of the account.
  # @param role ID or name of the role.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [RolePagedMetadata]
  describe 'add_permission_to_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_account
  # Create an Account.
  # {\&quot;nickname\&quot;:\&quot;Create a new account\&quot;,\&quot;response\&quot;:\&quot;createAccountResponse.html\&quot;,\&quot;request\&quot;:\&quot;createAccountRequest.html\&quot;}
  # @param request The account object to be created.
  # @param [Hash] opts the optional parameters
  # @return [AccountPagedMetadata]
  describe 'create_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_account
  # Delete the account specified by the account-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retire\&quot;,\&quot;response\&quot;:\&quot;deleteAccount.html\&quot;}
  # @param account_id 
  # @param delete_gateway_data 
  # @param organizations A list of organization-IDs used to restrict the scope of API calls.
  # @param [Hash] opts the optional parameters
  # @return [AccountPagedMetadata]
  describe 'delete_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_metadata_for_account
  # Remove any associated metadata.
  # {\&quot;nickname\&quot;:\&quot;Clear metadata from account\&quot;,\&quot;request\&quot; :\&quot;deleteAccountMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;deleteAccountMetadataResponse.html\&quot;}
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'delete_metadata_for_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_by_id
  # Returns a single account, specified by the account-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve an existing account\&quot;,\&quot;response\&quot;:\&quot;getAccountByID.html\&quot;}
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations 
  # @return [AccountPagedMetadata]
  describe 'get_account_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_accounts_by_created
  # Returns a collection of account objects with created times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by creation\&quot;,\&quot;response\&quot;:\&quot;getAccountByCreated.html\&quot;}
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [AccountPagedMetadata]
  describe 'get_accounts_by_created test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_accounts_by_updated
  # Returns a collection of account objects with updated times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by updated\&quot;,\&quot;response\&quot;:\&quot;getAccountByUpdated.html\&quot;}
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [AccountPagedMetadata]
  describe 'get_accounts_by_updated test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_accounts_by_user_id
  # Returns a collection of accounts, specified by the user-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by user\&quot;,\&quot;response\&quot;:\&quot;getAccountByUserID.html\&quot;}
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first account to return.
  # @option opts [Integer] :records The maximum number of accounts to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [AccountPagedMetadata]
  describe 'get_accounts_by_user_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_accounts
  # Returns a collection of all account objects. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get all accounts\&quot;,\&quot;response\&quot;:\&quot;getAccountAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :id A list of account IDs used to filter the output.
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @option opts [BOOLEAN] :users_only Whether only accounts have a user should be returned.
  # @option opts [String] :metadata 
  # @return [AccountPagedMetadata]
  describe 'get_all_accounts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_credit_on_account
  # Returns all available credit-notes for the specified account. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get available credit\&quot;,\&quot;response\&quot;:\&quot;getAvailableCreditAccount.html\&quot;}
  # @param account_id The ID of the account
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [CreditNotePagedMetadata]
  describe 'get_available_credit_on_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_metadata_for_account
  # Retrieve any associated metadata.
  # {\&quot;nickname\&quot;:\&quot;Retrieve metadata on account\&quot;,\&quot;request\&quot;:\&quot;getAccountMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;getAccountMetadataResponse.html\&quot;}
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'get_metadata_for_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_permissions_on_account
  # Retrieves a collection of roles, specified by the account-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;List roles on account\&quot;,\&quot;response\&quot;:\&quot;getRoleByAccount.html\&quot;}
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [RolePagedMetadata]
  describe 'get_permissions_on_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_credit_from_account
  # Decrease the amount of credit by the value specified or entirely if no value provided.
  # {\&quot;nickname\&quot;:\&quot;Remove Credit\&quot;,\&quot;response\&quot;:\&quot;removeCreditForAccount.html\&quot;}
  # @param account_id 
  # @param value &lt;p&gt;Either a credit note ID or a currency value.&lt;/p&gt;&lt;p&gt;If a credit note ID is provided any remaining credit will be removed from this credit note.&lt;/p&gt;&lt;p&gt;If a currency value is provided the format should be in the form of valueCurrency, where value is the value to remove. The currency should be an ISO 4217 Currency Code. For example setting the value as 10USD will reduce the credit on this account by $10 or 9.86USD would reduce the credit by $9.86. Note: the value will be reduced from any credit notes with available balance.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CreditNotePagedMetadata]
  describe 'remove_credit_from_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_permission_from_account
  # Revoke the specified role.
  # {\&quot;nickname\&quot;:\&quot;Remove Role\&quot;,\&quot;response\&quot;:\&quot;removeRoleFromAccount.html\&quot;}
  # @param account_id 
  # @param role ID or name of the role.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [RolePagedMetadata]
  describe 'remove_permission_from_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_metadata_for_account
  # Remove any existing metadata keys and create the provided data.
  # {\&quot;nickname\&quot;:\&quot;Set metadata on account\&quot;,\&quot;request\&quot;:\&quot;setAccountMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;setAccountMetadataResponse.html\&quot;}
  # @param metadata 
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'set_metadata_for_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_account
  # Update an Account.
  # {\&quot;nickname\&quot;:\&quot;Update an account\&quot;,\&quot;response\&quot;:\&quot;updateAccountResponse.html\&quot;,\&quot;request\&quot;:\&quot;updateAccountRequest.html\&quot;}
  # @param account The account object to be created.
  # @param [Hash] opts the optional parameters
  # @return [AccountPagedMetadata]
  describe 'update_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upsert_metadata_for_account
  # Update any existing metadata key-values and insert any new key-values, no keys will be removed.
  # {\&quot;nickname\&quot;:\&quot;Upsert metadata on account\&quot;,\&quot;request\&quot;:\&quot;upsertAccountMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;upsertAccountMetadataResponse.html\&quot;}
  # @param metadata 
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'upsert_metadata_for_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
