=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::SynchConfigsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SynchConfigsApi' do
  before do
    # run before each test
    @instance = Bfwd::SynchConfigsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SynchConfigsApi' do
    it 'should create an instance of SynchConfigsApi' do
      expect(@instance).to be_instance_of(Bfwd::SynchConfigsApi)
    end
  end

  # unit tests for create_sync_config
  # Create a synch configuration.
  # {\&quot;nickname\&quot;:\&quot;Create a new synch configuration\&quot;,\&quot;request\&quot;:\&quot;createSynchConfigRequest.html\&quot;,\&quot;response\&quot;:\&quot;createSynchConfigResponse.html\&quot;}
  # @param synch_config The data synch config object to be created.
  # @param [Hash] opts the optional parameters
  # @return [DataSynchronisationConfigurationPagedMetadata]
  describe 'create_sync_config test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_sync_configs
  # Returns a collection of Users. By default 10 values are returned. Records are returned in natural order.
  # { \&quot;nickname\&quot; : \&quot;Get all synch configs\&quot;,\&quot;response\&quot; : \&quot;getSynchConfigsAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first synch configuration to return.
  # @option opts [Integer] :records The maximum number of configs to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [DataSynchronisationConfigurationPagedMetadata]
  describe 'get_all_sync_configs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sync_config
  # Returns a single config, specified by the ID parameter.
  # { \&quot;nickname\&quot; : \&quot;Retrieve an existing synch config\&quot;,\&quot;response\&quot; : \&quot;getSynchConfigByID.html\&quot;}
  # @param synch_configs_id ID of the Synch Configuration.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization -IDs used to restrict the scope of API calls.
  # @return [DataSynchronisationConfigurationPagedMetadata]
  describe 'get_sync_config test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sync_config_by_platform
  # Returns a collection configurations, specified by the platform parameter.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by platform\&quot;,\&quot;response\&quot; : \&quot;getSynchConfigsByPlatform.html\&quot;}
  # @param platform The type of the synch configuration.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DataSynchronisationConfigurationPagedMetadata]
  describe 'get_sync_config_by_platform test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sync_config_by_username
  # Returns a collection configurations, specified by the username parameter.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by username\&quot;,\&quot;response\&quot; : \&quot;getSynchConfigByUsername.html\&quot;}
  # @param username The username in the synch configuration.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DataSynchronisationConfigurationPagedMetadata]
  describe 'get_sync_config_by_username test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_sync_config
  # Update a synch configuration.
  # { \&quot;nickname\&quot; : \&quot;Update a synch config\&quot;, \&quot;request\&quot; : \&quot;updateSyncConfigRequest.html\&quot; ,\&quot;response\&quot; : \&quot;updateSyncConfigResponse.html\&quot; }
  # @param synch_config The synch configuration object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [DataSynchronisationConfigurationPagedMetadata]
  describe 'update_sync_config test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
