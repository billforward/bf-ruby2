=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::EmailsubscriptionsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EmailsubscriptionsApi' do
  before do
    # run before each test
    @instance = Bfwd::EmailsubscriptionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EmailsubscriptionsApi' do
    it 'should create an instact of EmailsubscriptionsApi' do
      expect(@instance).to be_instance_of(Bfwd::EmailsubscriptionsApi)
    end
  end

  # unit tests for create_email_subscription
  # Create an email subscription.
  # {\&quot;nickname\&quot;:\&quot;Create an email subscription\&quot;,\&quot;request\&quot;:\&quot;createEmailSubscriptionRequest.html\&quot;,\&quot;response\&quot;:\&quot;creatEmailSubscriptionResponse.html\&quot;}
  # @param request .
  # @param [Hash] opts the optional parameters
  # @return [EmailSubscriptionPagedMetadata]
  describe 'create_email_subscription test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_email_subscription_by_type
  # Unsubscribe from the email specified by the type parameter.
  # { \&quot;nickname\&quot; : \&quot;Unsubscribe\&quot;,\&quot;response\&quot; : \&quot;unsubscribeEmail.html\&quot;}
  # @param type 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [EmailSubscriptionPagedMetadata]
  describe 'delete_email_subscription_by_type test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_email_subscriptions
  # Returns a collection of all email-subscriptions. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get all email subscriptions\&quot;,\&quot;response\&quot;:\&quot;getEmailSubscriptionsAll.html\&quot;}
  # @param state Constrains search to Email Subscriptions of a specific state.
  # @param type Constrains search to Email Subscriptions of a specific type
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first email-subscription to return.
  # @option opts [Integer] :records The maximum number of email-subscription to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [EmailSubscriptionPagedMetadata]
  describe 'get_all_email_subscriptions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_email_subscription_by_id
  # Retrieves a single email subscription, specified by ID.
  # { \&quot;nickname\&quot; : \&quot;Retrieve by ID\&quot;,\&quot;response\&quot; : \&quot;getEmailSubscriptionByID.html\&quot;}
  # @param email_subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [BOOLEAN] :include_retired Include deleted email-subscriptions
  # @return [EmailSubscriptionPagedMetadata]
  describe 'get_email_subscription_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_email_subscription
  # Update an email subscription.
  # {\&quot;nickname\&quot;:\&quot;Update EmailSubscription\&quot;,\&quot;request\&quot;:\&quot;updateEmailSubscriptionRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateEmailSubscriptionResponse.html\&quot;}
  # @param request .
  # @param [Hash] opts the optional parameters
  # @return [EmailSubscriptionPagedMetadata]
  describe 'update_email_subscription test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
