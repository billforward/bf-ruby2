=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::CreditnotesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CreditnotesApi' do
  before do
    # run before each test
    @instance = Bfwd::CreditnotesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CreditnotesApi' do
    it 'should create an instact of CreditnotesApi' do
      expect(@instance).to be_instance_of(Bfwd::CreditnotesApi)
    end
  end

  # unit tests for create_credit_note
  # Create a credit note.
  # {\&quot;nickname\&quot;:\&quot;Create a new credit note\&quot;,\&quot;request\&quot;:\&quot;createCreditNoteRequest.html\&quot;,\&quot;response\&quot;:\&quot;createCreditNoteResponse.html\&quot;}
  # @param credit_note The credit note object to be created.
  # @param [Hash] opts the optional parameters
  # @return [CreditNotePagedMetadata]
  describe 'create_credit_note test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credit_note_by_id
  # Returns a single credit-note, specified by the ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve an existing credit note\&quot;,\&quot;response\&quot;:\&quot;getCreditNoteByID.html\&quot;}
  # @param credit_note_id ID of the credit-note.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CreditNotePagedMetadata]
  describe 'get_credit_note_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credit_note_for_account
  # Returns credit notes for an account.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by account\&quot;,\&quot;response\&quot;:\&quot;getCreditNotesByAccount.html\&quot;}
  # @param account_id ID of the account.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first payment to return.
  # @option opts [Integer] :records The maximum number of payments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [CreditNotePagedMetadata]
  describe 'get_credit_note_for_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credit_note_for_invoice
  # Returns credit notes for an invoice.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by invoice\&quot;,\&quot;response\&quot;:\&quot;getCreditNotesByInvoice.html\&quot;}
  # @param invoice_id ID of the Invoice.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first payment to return.
  # @option opts [Integer] :records The maximum number of payments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [CreditNotePagedMetadata]
  describe 'get_credit_note_for_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credit_note_for_subscription
  # Returns credit notes for an subscription.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by subscription\&quot;,\&quot;response\&quot;:\&quot;getCreditNotesSubscription.html\&quot;}
  # @param subscription_id ID of the subscription.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first payment to return.
  # @option opts [Integer] :records The maximum number of payments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [CreditNotePagedMetadata]
  describe 'get_credit_note_for_subscription test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retire_credit_note
  # Removes any remaining value from credit note
  # {\&quot;nickname\&quot;:\&quot;Removes remaining value from credit note\&quot;,\&quot;response\&quot;:\&quot;deleteCreditNote.html\&quot;}
  # @param credit_note_id ID of the credit-note.
  # @param organizations A list of organization-IDs used to restrict the scope of API calls.
  # @param [Hash] opts the optional parameters
  # @return [CreditNotePagedMetadata]
  describe 'retire_credit_note test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
