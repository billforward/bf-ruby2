=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::TokenizationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TokenizationApi' do
  before do
    # run before each test
    @instance = Bfwd::TokenizationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TokenizationApi' do
    it 'should create an instact of TokenizationApi' do
      expect(@instance).to be_instance_of(Bfwd::TokenizationApi)
    end
  end

  # unit tests for auth_capture
  # [Note: this API can be invoked more simply by our client-side card capture library, &lt;a href&#x3D;\&quot;https://github.com/billforward/billforward-js\&quot;&gt;BillForward.js&lt;/a&gt;; you should not need to interact with this API manually unless you have particularly bespoke requirements] 
  # {\&quot;nickname\&quot;:\&quot;Authorized card capture\&quot;,\&quot;response\&quot;:\&quot;BFJSAuthCapture.html\&quot;,\&quot;request\&quot;:\&quot;BFJSAuthCapture.request.html\&quot;}
  # @param auth_capture_request The auth capture request.
  # @param [Hash] opts the optional parameters
  # @return [PaymentMethodPagedMetadata]
  describe 'auth_capture test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for braintree_card_capture
  # [Warning: for use only in PCI-compliant environments; for more information, &lt;a href&#x3D;\&quot;mailto:support@billforward.net\&quot;&gt;contact us&lt;/a&gt; regarding provisioning of your own on-premise BillForward instance] Captures raw credit card details into Braintree&#39;s vault.
  # {\&quot;nickname\&quot;:\&quot;Braintree Tokenization\&quot;,\&quot;response\&quot;:\&quot;braintreeDirectTokenization.html\&quot;,\&quot;request\&quot;:\&quot;braintreeDirectTokenization.request.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [BraintreeCaptureRequest] :body 
  # @return [PaymentMethodPagedMetadata]
  describe 'braintree_card_capture test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pay_vision_shout_v1
  # [Note: this API is intended to be invoked by the PayVision servers -- they are BillForward&#39;s way of informing client-side of the result of card-capture from within an iframe] Generates iframe to which customer will be directed upon success or failure. The iframe contains JavaScript which attempts to send a message to BillForward.js on the client-side, which will handle the result.
  # {\&quot;nickname\&quot;:\&quot;Generate PayVision iframe redirect\&quot;,\&quot;response\&quot;:\&quot;payVisionShoutV1.html\&quot;,\&quot;request\&quot;:\&quot;payVisionShoutV1.request.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [String] :resource_path 
  # @option opts [String] :id 
  # @return [String]
  describe 'pay_vision_shout_v1 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pre_auth
  # [Note: this API can be invoked more simply by our client-side card capture library, &lt;a href&#x3D;\&quot;https://github.com/billforward/billforward-js\&quot;&gt;BillForward.js&lt;/a&gt;; you should not need to interact with this API manually unless you have particularly bespoke requirements] 
  # {\&quot;nickname\&quot;:\&quot;Pre-authorize card capture\&quot;,\&quot;response\&quot;:\&quot;BFJSPreAuth.html\&quot;,\&quot;request\&quot;:\&quot;BFJSPreAuth.request.html\&quot;}
  # @param pre_auth_request The auth request.
  # @param [Hash] opts the optional parameters
  # @return [TokenizationPreAuthPagedMetadata]
  describe 'pre_auth test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sage_pay_notify_v300
  # [Note: this API is intended to be invoked by the SagePay servers -- they are BillForward&#39;s way of receiving a callback from a SagePay card capture operation, using SagePay&#39;s FORM Protocol, v3.0] Handles SagePay Notification.
  # {\&quot;nickname\&quot;:\&quot;Handle SagePay Notification\&quot;,\&quot;response\&quot;:\&quot;sagePayNotifyV3_00.html\&quot;,\&quot;request\&quot;:\&quot;sagePayNotifyV3_00.request.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.Multiple organization-IDs may be specified by repeated use of the queryparameter. Example: ...&amp;organizations&#x3D;org1&amp;organizations&#x3D;org2
  # @option opts [String] :bill_forward_url_root The URL through which BFJS connected to Bfwd.
  # @option opts [String] :access_token The public token through which BFJS connected to Bfwd.
  # @option opts [String] :vps_protocol 
  # @option opts [String] :tx_type 
  # @option opts [String] :vendor_tx_code 
  # @option opts [String] :status 
  # @option opts [String] :vps_tx_id 
  # @option opts [String] :card_type 
  # @option opts [String] :token 
  # @option opts [String] :status_detail 
  # @option opts [String] :last4_digits 
  # @option opts [String] :vps_signature 
  # @option opts [String] :expiry_date 
  # @return [String]
  describe 'sage_pay_notify_v300 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sage_pay_shout_v300
  # [Note: this API is intended to be invoked by the SagePay servers -- they are BillForward&#39;s way of informing client-side of the result of card-capture from within an iframe, using SagePay&#39;s FORM Protocol, v3.0] Generates iframe to which customer will be directed upon success or failure. The iframe contains JavaScript which attempts to send a message to BillForward.js on the client-side, which will handle the result.
  # {\&quot;nickname\&quot;:\&quot;Generate SagePay iframe redirect\&quot;,\&quot;response\&quot;:\&quot;sagePayShoutV3_00.html\&quot;,\&quot;request\&quot;:\&quot;sagePayShoutV3_00.request.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.Multiple organization-IDs may be specified by repeated use of the queryparameter. Example: ...&amp;organizations&#x3D;org1&amp;organizations&#x3D;org2
  # @option opts [String] :s 
  # @option opts [String] :t 
  # @option opts [String] :c 
  # @option opts [String] :e 
  # @option opts [String] :l 
  # @option opts [String] :d 
  # @return [String]
  describe 'sage_pay_shout_v300 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
