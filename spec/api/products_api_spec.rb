=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::ProductsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProductsApi' do
  before do
    # run before each test
    @instance = Bfwd::ProductsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProductsApi' do
    it 'should create an instance of ProductsApi' do
      expect(@instance).to be_instance_of(Bfwd::ProductsApi)
    end
  end

  # unit tests for create_product
  # Create a product.
  # {\&quot;nickname\&quot;:\&quot;Create a new product\&quot;,\&quot;request\&quot;:\&quot;createProductRequest.html\&quot;,\&quot;response\&quot;:\&quot;createProductResponse.html\&quot;}
  # @param product The product object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [ProductPagedMetadata]
  describe 'create_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_metadata_for_product
  # Remove any associated metadata.
  # {\&quot;nickname\&quot;:\&quot;Clear metadata from product\&quot;,\&quot;request\&quot; :\&quot;deleteProductMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;deleteProductMetadataResponse.html\&quot;}
  # @param product_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'delete_metadata_for_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_products
  # Returns a collection of products. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get all products\&quot;,\&quot;response\&quot;:\&quot;getProductAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first product to return.
  # @option opts [Integer] :records The maximum number of products to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @option opts [String] :metadata 
  # @return [ProductPagedMetadata]
  describe 'get_all_products test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_metadata_for_product
  # Retrieve any associated metadata.
  # {\&quot;nickname\&quot;:\&quot;Retrieve metadata on product\&quot;,\&quot;request\&quot;:\&quot;getProductMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;getProductMetadataResponse.html\&quot;}
  # @param product_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'get_metadata_for_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_product_by_id
  # Returns a single product, specified by the product-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve an existing product\&quot;,\&quot;response\&quot;:\&quot;getProductByID.html\&quot;}
  # @param product_id ID or name of the product.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first product-rate-plan to return.
  # @option opts [Integer] :records The maximum number of product-rate-plans to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [ProductPagedMetadata]
  describe 'get_product_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retire_product
  # Deletes the product specified by the product-ID parameter. Any existing subscriptions will continue; it is a soft delete.
  # {\&quot;nickname\&quot;:\&quot;Delete a product\&quot;,\&quot;response\&quot;:\&quot;deleteProduct.html\&quot;}
  # @param product_id ID of the Product.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [ProductPagedMetadata]
  describe 'retire_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_metadata_for_product
  # Remove any existing metadata keys and create the provided data.
  # {\&quot;nickname\&quot;:\&quot;Set metadata on product\&quot;,\&quot;request\&quot;:\&quot;setProductMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;setProductMetadataResponse.html\&quot;}
  # @param metadata 
  # @param product_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'set_metadata_for_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_product
  # Update a product.
  # {\&quot;nickname\&quot;:\&quot;Update a product\&quot;,\&quot;request\&quot;:\&quot;updateProductRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateProductResponse.html\&quot;}
  # @param product The product object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [ProductPagedMetadata]
  describe 'update_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upsert_metadata_for_product
  # Update any existing metadata key-values and insert any new key-values, no keys will be removed.
  # {\&quot;nickname\&quot;:\&quot;Upsert metadata on product\&quot;,\&quot;request\&quot;:\&quot;upsertProductMetadataRequest.html\&quot;,\&quot;response\&quot;:\&quot;upsertProductMetadataResponse.html\&quot;}
  # @param metadata 
  # @param product_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DynamicMetadata]
  describe 'upsert_metadata_for_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
