=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::UsageroundingstrategiesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UsageroundingstrategiesApi' do
  before do
    # run before each test
    @instance = Bfwd::UsageroundingstrategiesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsageroundingstrategiesApi' do
    it 'should create an instance of UsageroundingstrategiesApi' do
      expect(@instance).to be_instance_of(Bfwd::UsageroundingstrategiesApi)
    end
  end

  # unit tests for create_usage_rounding_strategy
  # Create a new rounding strategy
  # {\&quot;nickname\&quot;:\&quot;Create a new rounding strategy\&quot;,\&quot;request\&quot;:\&quot;createUsageRoundingStrategiesRequest.html\&quot;,\&quot;response\&quot;:\&quot;createUsageRoundingStrategiesResponse.html\&quot;}
  # @param usage_rounding_strategy The usage-rounding-strategy object to be created.
  # @param [Hash] opts the optional parameters
  # @return [UsageRoundingStrategyPagedMetadata]
  describe 'create_usage_rounding_strategy test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_usage_rounding_strategy_by_id
  # Returns a collection of usage-rounding-strategies, specified by the usage-rounding-strategies-id parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve an existing round strategy\&quot;,\&quot;response\&quot;:\&quot;getUsageRoundingStrategiesByID.html\&quot;}
  # @param usage_rounding_strategies_id The string ID of the usage-rounding-strategies.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first pricing-component to return.
  # @option opts [Integer] :records The maximum number of pricing-components to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [UsageRoundingStrategyPagedMetadata]
  describe 'get_usage_rounding_strategy_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_usage_rounding_strategy_by_pricing_component_id
  # Returns a collection of usage-rounding-strategies, specified by the pricing-component-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by pricing component\&quot;,\&quot;response\&quot;:\&quot;getUsageRoundingStrategiesByPricingComponent.html\&quot;}
  # @param pricing_component_id The string pricing-component-ID of the pricing-component.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first pricing-component to return.
  # @option opts [Integer] :records The maximum number of pricing-components to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [UsageRoundingStrategyPagedMetadata]
  describe 'get_usage_rounding_strategy_by_pricing_component_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_usage_rounding_strategy
  # Update a rounding strategy
  # {\&quot;nickname\&quot;:\&quot;Update a rounding strategy\&quot;,\&quot;request\&quot;:\&quot;updateUsageRoundingStrategiesRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateUsageRoundingStrategiesResponse.html\&quot;}
  # @param usage_rounding_strategy The usage-rounding-strategy object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [UsageRoundingStrategyPagedMetadata]
  describe 'update_usage_rounding_strategy test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
