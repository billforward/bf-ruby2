=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::AmendmentsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AmendmentsApi' do
  before do
    # run before each test
    @instance = Bfwd::AmendmentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AmendmentsApi' do
    it 'should create an instact of AmendmentsApi' do
      expect(@instance).to be_instance_of(Bfwd::AmendmentsApi)
    end
  end

  # unit tests for create_amendment
  # Create an amendment.
  # {\&quot;nickname\&quot;:\&quot;Create a new amendment\&quot;,\&quot;request\&quot;:\&quot;createAmendmentRequest.html\&quot;,\&quot;response\&quot;:\&quot;createAmendmentResponse.html\&quot; }
  # @param amendment The amendment object to be created.
  # @param [Hash] opts the optional parameters
  # @return [AmendmentPagedMetadata]
  describe 'create_amendment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_amendments
  # Returns a collection of all amendments. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get all amendments\&quot;,\&quot;response\&quot;:\&quot;getAmendmentAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [String] :invoice_id Ihe invoice ID associated with the amendment.
  # @option opts [String] :state Ihe state of the amendment.
  # @option opts [String] :type Ihe type of amendment.
  # @return [AmendmentPagedMetadata]
  describe 'get_all_amendments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_amendment_by_id
  # Returns a single amendment, specified by the amendment-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve an existing amendment\&quot;,\&quot;response\&quot;:\&quot;getAmendmentByID.html\&quot;}
  # @param amendment_id The unique string-ID of the amendment.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [AmendmentPagedMetadata]
  describe 'get_amendment_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_amendment_by_state
  # Returns a collection of amendments, specified by the state parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by state\&quot;,\&quot;response\&quot;:\&quot;getAmendmentsByState.html\&quot;}
  # @param state The current state of the amendment, either pending, succeeded, failed or discarded
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [AmendmentPagedMetadata]
  describe 'get_amendment_by_state test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_amendment_by_subscription_id
  # Returns a collection of amendments, specified by the subscription-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by subscription\&quot;,\&quot;response\&quot;:\&quot;getAmendmentsBySubscription.html\&quot;}
  # @param subscription_id ID of the subscription
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [AmendmentPagedMetadata]
  describe 'get_amendment_by_subscription_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_amendment_swagger
  # 
  # {\&quot;nickname\&quot;:\&quot;\&quot;,\&quot;response\&quot;:\&quot;\&quot;}
  # @param query_string The query string used to search.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The starting index of the search results.
  # @option opts [Integer] :records The number of search results to return.
  # @option opts [BOOLEAN] :wildcard Toggle if we search for full words or whether a wildcard is used.
  # @option opts [BOOLEAN] :entity Is an entity returned with the search results.
  # @return [SwaggerTypeList]
  describe 'get_amendment_swagger test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_amendments_by_actioning_time
  # Returns a collection of amendment objects with an actioning-time within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by actioning\&quot;,\&quot;response\&quot;:\&quot;getAmendmentByActioningTime.html\&quot;}
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [AmendmentPagedMetadata]
  describe 'get_amendments_by_actioning_time test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_amendments_by_created_date
  # Returns a collection of amendment objects with created times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by creation\&quot;,\&quot;response\&quot;:\&quot;getAmendmentByCreated.html\&quot;}
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [AmendmentPagedMetadata]
  describe 'get_amendments_by_created_date test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_amendments_by_updated_date
  # Returns a collection of amendment objects with updated times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by updated\&quot;,\&quot;response\&quot;:\&quot;getAmendmentByUpdated.html\&quot;}
  # @param lower_threshold The UTC DateTime specifying the start of the result period.
  # @param upper_threshold The UTC DateTime specifying the end of the result period.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @return [AmendmentPagedMetadata]
  describe 'get_amendments_by_updated_date test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retire_amendment
  # Retires the amendment specified by the amendment-ID parameter. Retiring a amendment causes it to cancel based on the specificed retirement settings for the product.
  # {\&quot;nickname\&quot;:\&quot;Delete an amendment\&quot;,\&quot;response\&quot;:\&quot;deleteAmendment.html\&quot;}
  # @param amendment_id ID of the amendment.
  # @param organizations A list of organization-IDs used to restrict the scope of API calls.
  # @param [Hash] opts the optional parameters
  # @return [AmendmentPagedMetadata]
  describe 'retire_amendment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_amendment
  # Update an amendment.
  # {\&quot;nickname\&quot;:\&quot;Update an amendment\&quot;,\&quot;request\&quot;:\&quot;updateAmendmentRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateAmendmentResponse.html\&quot; }
  # @param amendment The amendment object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [AmendmentPagedMetadata]
  describe 'update_amendment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
