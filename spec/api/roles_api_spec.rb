=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::RolesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RolesApi' do
  before do
    # run before each test
    @instance = Bfwd::RolesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RolesApi' do
    it 'should create an instance of RolesApi' do
      expect(@instance).to be_instance_of(Bfwd::RolesApi)
    end
  end

  # unit tests for create_role
  # Create a new role.
  # {\&quot;nickname\&quot;:\&quot;Create a new role\&quot;,\&quot;request\&quot;:\&quot;createRoleRequest.html\&quot;,\&quot;response\&quot;:\&quot;createRoleResponse.html\&quot;}
  # @param role_request 
  # @param [Hash] opts the optional parameters
  # @return [RolePagedMetadata]
  describe 'create_role test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_roles
  # Retrieves a collection of all roles. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve all roles\&quot;,\&quot;response\&quot;:\&quot;getRoleAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations 
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [RolePagedMetadata]
  describe 'get_all_roles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_role_by_id
  # Retrieves a single role, specified by the ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve a role\&quot;,\&quot;response\&quot;:\&quot;getRoleByID.html\&quot;}
  # @param role ID or name of the role.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations 
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [RolePagedMetadata]
  describe 'get_role_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_permission_from_role
  # Revokes a particular permission
  # {\&quot;nickname\&quot;:\&quot;Remove Permission from role\&quot;,\&quot;response\&quot;:\&quot;removePermissionFromGroup.html\&quot;,\&quot;request\&quot;:\&quot;removePermissionFromGroupRequest.html\&quot;}
  # @param role ID or name of the role.
  # @param resource 
  # @param action 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations 
  # @return [RolePagedMetadata]
  describe 'remove_permission_from_role test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for revoke_role
  # Revokes a role
  # {\&quot;nickname\&quot;:\&quot;Revoke role\&quot;,\&quot;response\&quot;:\&quot;revokeRole.html\&quot;,\&quot;request\&quot;:\&quot;revokeRoleRequest.html\&quot;}
  # @param role ID or name of the role.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations 
  # @return [RolePagedMetadata]
  describe 'revoke_role test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_role
  # Update a role.
  # {\&quot;nickname\&quot;:\&quot;Update a role\&quot;,\&quot;request\&quot;:\&quot;updateRoleRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateRoleResponse.html\&quot;}
  # @param role_request 
  # @param [Hash] opts the optional parameters
  # @return [RolePagedMetadata]
  describe 'update_role test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
