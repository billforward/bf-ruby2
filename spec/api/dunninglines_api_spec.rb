=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::DunninglinesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DunninglinesApi' do
  before do
    # run before each test
    @instance = Bfwd::DunninglinesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DunninglinesApi' do
    it 'should create an instance of DunninglinesApi' do
      expect(@instance).to be_instance_of(Bfwd::DunninglinesApi)
    end
  end

  # unit tests for create_dunning_line
  # Create a dunning-line.
  # {\&quot;nickname\&quot;:\&quot;Create a new dunning line\&quot;,\&quot;request\&quot;:\&quot;createDunningLineRequest.html\&quot;,\&quot;response\&quot;:\&quot;createDunningLineResponse.html\&quot;}
  # @param dunning_line The Dunning-Line object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [DunningLinePagedMetadata]
  describe 'create_dunning_line test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_dunning_lines
  # Returns a collection of all dunning-lines. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get all dunning lines\&quot;,\&quot;response\&quot;:\&quot;getDunningLineByID.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [DunningLinePagedMetadata]
  describe 'get_all_dunning_lines test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_dunning_line_by_attempt_index
  # Returns a collection of dunning-lines specified by the index parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by attempt\&quot;,\&quot;response\&quot;:\&quot;getDunningLineByID.html\&quot;}
  # @param index The attempt index of the dunning-line.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first invoice to return.
  # @option opts [Integer] :records The maximum number of invoices to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [DunningLinePagedMetadata]
  describe 'get_dunning_line_by_attempt_index test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_dunning_line_by_id
  # Returns a single dunning-line, specified by the dunning-line-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve an existing dunning line\&quot;,\&quot;response\&quot;:\&quot;getDunningLineByID.html\&quot;}
  # @param dunning_line_id ID of the dunning-line.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [DunningLinePagedMetadata]
  describe 'get_dunning_line_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retire_dunning_line
  # Retires the specified dunning-line.
  # {\&quot;nickname\&quot;:\&quot;Delete a dunning line\&quot;,\&quot;response\&quot;:\&quot;deleteDunningLine.html\&quot;}
  # @param dunning_line_id ID of the dunning-line.
  # @param organizations A list of organization-IDs used to restrict the scope of API calls.
  # @param [Hash] opts the optional parameters
  # @return [DunningLinePagedMetadata]
  describe 'retire_dunning_line test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_dunning_line
  # Update a dunning-line.
  # {\&quot;nickname\&quot;:\&quot;Update a dunning line\&quot;,\&quot;request\&quot;:\&quot;updateDunningLineRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateDunningLineResponse.html\&quot;}
  # @param dunning_line The Dunning-Line object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [DunningLinePagedMetadata]
  describe 'update_dunning_line test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
