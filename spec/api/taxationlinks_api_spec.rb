=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::TaxationlinksApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TaxationlinksApi' do
  before do
    # run before each test
    @instance = Bfwd::TaxationlinksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TaxationlinksApi' do
    it 'should create an instact of TaxationlinksApi' do
      expect(@instance).to be_instance_of(Bfwd::TaxationlinksApi)
    end
  end

  # unit tests for create_taxation_link
  # Create
  # {\&quot;nickname\&quot;:\&quot;Add a taxation strategy to a rate-plan\&quot;,\&quot;request\&quot;:\&quot;createTaxationLinkRequest.html\&quot;,\&quot;response\&quot;:\&quot;createTaxationLinkResponse.html\&quot;}
  # @param taxation_link The taxation-link object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [TaxationLinkPagedMetadata]
  describe 'create_taxation_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_taxation_links
  # Returns a collection of all taxation-links. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Get all taxation links\&quot;,\&quot;response\&quot;:\&quot;getTaxationLinkAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [TaxationLinkPagedMetadata]
  describe 'get_all_taxation_links test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_taxation_link_by_id
  # Returns a single taxation-link, specified by the taxation-link-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve an existing taxation link\&quot;,\&quot;response\&quot;:\&quot;getTaxationLinkByID.html\&quot;}
  # @param taxation_link_id The unique ID of the Taxation Link.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [TaxationLinkPagedMetadata]
  describe 'get_taxation_link_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_taxation_link_by_product_rate_plan
  # Returns a collection of taxation-links, specified by the product-rate-plan-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by rate-plan\&quot;,\&quot;response\&quot;:\&quot;getTaxationLinkByPRPID.html\&quot;}
  # @param product_rate_plan_id The ID of the product-rate-plan
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [TaxationLinkPagedMetadata]
  describe 'get_taxation_link_by_product_rate_plan test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_taxation_link_by_taxation_strategy
  # Returns a collection of taxation-links, specified by the taxation-strategy-ID parameter. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve by taxation strategy\&quot;,\&quot;response\&quot;:\&quot;getTaxationLinkByTSID.html\&quot;}
  # @param taxation_strategy_id The ID of the taxation-strategy
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first taxation-link to return.
  # @option opts [Integer] :records The maximum number of taxation-links to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
  # @return [TaxationLinkPagedMetadata]
  describe 'get_taxation_link_by_taxation_strategy test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_taxation_link
  # Update
  # {\&quot;nickname\&quot;:\&quot;Change taxation linked to rate-plan\&quot;,\&quot;request\&quot;:\&quot;updateTaxationLinkRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateTaxationLinkResponse.html\&quot;}
  # @param taxation_link The taxation-link object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [TaxationLinkPagedMetadata]
  describe 'update_taxation_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
