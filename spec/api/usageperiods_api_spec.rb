=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::UsageperiodsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UsageperiodsApi' do
  before do
    # run before each test
    @instance = Bfwd::UsageperiodsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsageperiodsApi' do
    it 'should create an instance of UsageperiodsApi' do
      expect(@instance).to be_instance_of(Bfwd::UsageperiodsApi)
    end
  end

  # unit tests for get_usage_period
  # Retrieve by subscription and period
  # { \&quot;nickname\&quot; : \&quot;Retrieve by subscription and period\&quot;,\&quot;response\&quot; : \&quot;getUsagePeriodsForPeriod.html\&quot;}
  # @param subscription_id The subscriptionID of the usage.
  # @param period_id The periodID of the usage.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [UsagePeriodPagedMetadata]
  describe 'get_usage_period test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_usage_period_for_all
  # Retrieve by subscription
  # { \&quot;nickname\&quot; : \&quot;Retrieve by subscription\&quot;,\&quot;response\&quot; : \&quot;getUsagePeriods.html\&quot;}
  # @param subscription_id The subscriptionID of the usage.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [UsagePeriodPagedMetadata]
  describe 'get_usage_period_for_all test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_usage_period_for_invoice
  # Retrieve by invoice)
  # { \&quot;nickname\&quot; : \&quot;Retrieve by invoice\&quot;,\&quot;response\&quot; : \&quot;getUsagePeriodForInvoice.html\&quot;}
  # @param subscription_id The subscriptionID of the usage.
  # @param invoice_id The invoiceID of the usage.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first amendment to return.
  # @option opts [Integer] :records The maximum number of amendments to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order The direction of any ordering, either ASC or DESC.
  # @return [UsagePeriodPagedMetadata]
  describe 'get_usage_period_for_invoice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
