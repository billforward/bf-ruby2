=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::PermissionsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PermissionsApi' do
  before do
    # run before each test
    @instance = Bfwd::PermissionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PermissionsApi' do
    it 'should create an instact of PermissionsApi' do
      expect(@instance).to be_instance_of(Bfwd::PermissionsApi)
    end
  end

  # unit tests for create_permission
  # Create a new permission.
  # {\&quot;nickname\&quot;:\&quot;Create a new permission\&quot;,\&quot;request\&quot;:\&quot;createPermissionRequest.html\&quot;,\&quot;response\&quot;:\&quot;createPermissionResponse.html\&quot;}
  # @param permission_request 
  # @param [Hash] opts the optional parameters
  # @return [BFPermissionPagedMetadata]
  describe 'create_permission test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_permissions
  # Retrieves a collection of all permissions. By default 10 values are returned. Records are returned in natural order.
  # {\&quot;nickname\&quot;:\&quot;Retrieve all permissions\&quot;,\&quot;response\&quot;:\&quot;getPermissionAll.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [Integer] :offset The offset from the first subscription to return.
  # @option opts [Integer] :records The maximum number of subscriptions to return.
  # @option opts [String] :order_by Specify a field used to order the result set.
  # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [BFPermissionPagedMetadata]
  describe 'get_all_permissions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_actions_for_resource
  # Retrieves all the available actions for the specified resource.
  # {\&quot;nickname\&quot;:\&quot;Retrieve available actions\&quot;,\&quot;response\&quot;:\&quot;getAvailableActions.html\&quot;}
  # @param resource 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [PermissionActionEntityPagedMetadata]
  describe 'get_available_actions_for_resource test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_resources
  # Retrieves all available resource.
  # {\&quot;nickname\&quot;:\&quot;Retrieve available resources\&quot;,\&quot;response\&quot;:\&quot;getAvailableResources.html\&quot;}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [PermissionResourceEntityPagedMetadata]
  describe 'get_available_resources test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_permission_by_id
  # Retrieves a single permission, specified by the ID parameter.
  # {\&quot;nickname\&quot;:\&quot;Retrieve a permission\&quot;,\&quot;response\&quot;:\&quot;getPermissionByID.html\&quot;}
  # @param permission_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @option opts [BOOLEAN] :include_retired Whether retired subscriptions should be returned.
  # @return [BFPermissionPagedMetadata]
  describe 'get_permission_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for revoke_permission
  # Revokes a permission
  # {\&quot;nickname\&quot;:\&quot;Revoke permission\&quot;,\&quot;response\&quot;:\&quot;revokePermission.html\&quot;,\&quot;request\&quot;:\&quot;revokePErmissionRequest.html\&quot;}
  # @param permission_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [BFPermissionPagedMetadata]
  describe 'revoke_permission test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
