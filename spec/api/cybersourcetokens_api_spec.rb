=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for Bfwd::CybersourcetokensApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CybersourcetokensApi' do
  before do
    # run before each test
    @instance = Bfwd::CybersourcetokensApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CybersourcetokensApi' do
    it 'should create an instact of CybersourcetokensApi' do
      expect(@instance).to be_instance_of(Bfwd::CybersourcetokensApi)
    end
  end

  # unit tests for create_cybersource_token
  # Create a cybersource-token.
  # {\&quot;nickname\&quot;:\&quot;Create a cybersource-token\&quot;,\&quot;request\&quot;:\&quot;createCybersourceTokenRequest.html\&quot;,\&quot;response\&quot;:\&quot;createCybersourceTokenResponse.html\&quot;}
  # @param cybersource_token The cybersource-token object to be created.
  # @param [Hash] opts the optional parameters
  # @return [CybersourceTokenPagedMetadata]
  describe 'create_cybersource_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cybersource_token_by_id
  # Returns a single cybersource-token, specified by the token-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;NICKNAME\&quot;,\&quot;response\&quot;:\&quot;getCybersourceTokenByID.html\&quot;}
  # @param token_id The unique sting ID of the cybersource token.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CybersourceTokenPagedMetadata]
  describe 'get_cybersource_token_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cybersource_token_by_recurring_subscription_id
  # Returns a single cybersource-token, specified by the recurring-subscription-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;NICKNAME\&quot;,\&quot;response\&quot;:\&quot;getCybersourceTokenByID.html\&quot;}
  # @param recurring_subscription_id The recurring-subscription-info-subscription-ID of the cybersource token.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
  # @return [CybersourceTokenPagedMetadata]
  describe 'get_cybersource_token_by_recurring_subscription_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retire_cybersource_token
  # Retires the cybersource token specified by the token-ID parameter.
  # {\&quot;nickname\&quot;:\&quot;NICKNAME\&quot;,\&quot;response\&quot;:\&quot;deleteCybersourceToken.html\&quot;}
  # @param token_id ID of the cybersource-token.
  # @param organizations A list of organization-IDs used to restrict the scope of API calls.
  # @param [Hash] opts the optional parameters
  # @return [CybersourceTokenPagedMetadata]
  describe 'retire_cybersource_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cybersource_token
  # Update a cybersource-token.
  # {\&quot;nickname\&quot;:\&quot;Update a cybersource-token\&quot;,\&quot;request\&quot;:\&quot;updateCybersourceTokenRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateCybersourceTokenResponse.html\&quot;}
  # @param cybersource_token The cybersource-token object to be updated.
  # @param [Hash] opts the optional parameters
  # @return [CybersourceTokenPagedMetadata]
  describe 'update_cybersource_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
