=begin
#BillForward REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require "uri"

module Bfwd
  class TaxationlinksApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Create
    # {\"nickname\":\"Add a taxation strategy to a rate-plan\",\"request\":\"createTaxationLinkRequest.html\",\"response\":\"createTaxationLinkResponse.html\"}
    # @param taxation_link The taxation-link object to be updated.
    # @param [Hash] opts the optional parameters
    # @return [TaxationLinkPagedMetadata]
    def create_taxation_link(taxation_link, opts = {})
      data, _status_code, _headers = create_taxation_link_with_http_info(taxation_link, opts)
      return data
    end

    # Create
    # {\&quot;nickname\&quot;:\&quot;Add a taxation strategy to a rate-plan\&quot;,\&quot;request\&quot;:\&quot;createTaxationLinkRequest.html\&quot;,\&quot;response\&quot;:\&quot;createTaxationLinkResponse.html\&quot;}
    # @param taxation_link The taxation-link object to be updated.
    # @param [Hash] opts the optional parameters
    # @return [Array<(TaxationLinkPagedMetadata, Fixnum, Hash)>] TaxationLinkPagedMetadata data, response status code and response headers
    def create_taxation_link_with_http_info(taxation_link, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TaxationlinksApi.create_taxation_link ..."
      end
      # verify the required parameter 'taxation_link' is set
      if @api_client.config.client_side_validation && taxation_link.nil?
        fail ArgumentError, "Missing the required parameter 'taxation_link' when calling TaxationlinksApi.create_taxation_link"
      end
      # resource path
      local_var_path = "/taxation-links"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/xml', 'application/xml', 'application/json; charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json; charset=utf-8'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(taxation_link)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TaxationLinkPagedMetadata')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TaxationlinksApi#create_taxation_link\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Returns a collection of all taxation-links. By default 10 values are returned. Records are returned in natural order.
    # {\"nickname\":\"Get all taxation links\",\"response\":\"getTaxationLinkAll.html\"}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
    # @option opts [Integer] :offset The offset from the first taxation-link to return. (default to 0)
    # @option opts [Integer] :records The maximum number of taxation-links to return. (default to 10)
    # @option opts [String] :order_by Specify a field used to order the result set. (default to created)
    # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC. (default to DESC)
    # @option opts [BOOLEAN] :include_retired Whether retired products should be returned. (default to true)
    # @return [TaxationLinkPagedMetadata]
    def get_all_taxation_links(opts = {})
      data, _status_code, _headers = get_all_taxation_links_with_http_info(opts)
      return data
    end

    # Returns a collection of all taxation-links. By default 10 values are returned. Records are returned in natural order.
    # {\&quot;nickname\&quot;:\&quot;Get all taxation links\&quot;,\&quot;response\&quot;:\&quot;getTaxationLinkAll.html\&quot;}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
    # @option opts [Integer] :offset The offset from the first taxation-link to return.
    # @option opts [Integer] :records The maximum number of taxation-links to return.
    # @option opts [String] :order_by Specify a field used to order the result set.
    # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
    # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
    # @return [Array<(TaxationLinkPagedMetadata, Fixnum, Hash)>] TaxationLinkPagedMetadata data, response status code and response headers
    def get_all_taxation_links_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TaxationlinksApi.get_all_taxation_links ..."
      end
      if @api_client.config.client_side_validation && opts[:'order'] && !['ASC', 'DESC'].include?(opts[:'order'])
        fail ArgumentError, 'invalid value for "order", must be one of ASC, DESC'
      end
      # resource path
      local_var_path = "/taxation-links"

      # query parameters
      query_params = {}
      query_params[:'organizations'] = @api_client.build_collection_param(opts[:'organizations'], :multi) if !opts[:'organizations'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'records'] = opts[:'records'] if !opts[:'records'].nil?
      query_params[:'order_by'] = opts[:'order_by'] if !opts[:'order_by'].nil?
      query_params[:'order'] = opts[:'order'] if !opts[:'order'].nil?
      query_params[:'include_retired'] = opts[:'include_retired'] if !opts[:'include_retired'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json; charset=utf-8'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TaxationLinkPagedMetadata')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TaxationlinksApi#get_all_taxation_links\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Returns a single taxation-link, specified by the taxation-link-ID parameter.
    # {\"nickname\":\"Retrieve an existing taxation link\",\"response\":\"getTaxationLinkByID.html\"}
    # @param taxation_link_id The unique ID of the Taxation Link.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
    # @return [TaxationLinkPagedMetadata]
    def get_taxation_link_by_id(taxation_link_id, opts = {})
      data, _status_code, _headers = get_taxation_link_by_id_with_http_info(taxation_link_id, opts)
      return data
    end

    # Returns a single taxation-link, specified by the taxation-link-ID parameter.
    # {\&quot;nickname\&quot;:\&quot;Retrieve an existing taxation link\&quot;,\&quot;response\&quot;:\&quot;getTaxationLinkByID.html\&quot;}
    # @param taxation_link_id The unique ID of the Taxation Link.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
    # @return [Array<(TaxationLinkPagedMetadata, Fixnum, Hash)>] TaxationLinkPagedMetadata data, response status code and response headers
    def get_taxation_link_by_id_with_http_info(taxation_link_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TaxationlinksApi.get_taxation_link_by_id ..."
      end
      # verify the required parameter 'taxation_link_id' is set
      if @api_client.config.client_side_validation && taxation_link_id.nil?
        fail ArgumentError, "Missing the required parameter 'taxation_link_id' when calling TaxationlinksApi.get_taxation_link_by_id"
      end
      # resource path
      local_var_path = "/taxation-links/{taxation-link-ID}".sub('{' + 'taxation-link-ID' + '}', taxation_link_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'organizations'] = @api_client.build_collection_param(opts[:'organizations'], :multi) if !opts[:'organizations'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json; charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['text/plain'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TaxationLinkPagedMetadata')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TaxationlinksApi#get_taxation_link_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Returns a collection of taxation-links, specified by the product-rate-plan-ID parameter. By default 10 values are returned. Records are returned in natural order.
    # {\"nickname\":\"Retrieve by rate-plan\",\"response\":\"getTaxationLinkByPRPID.html\"}
    # @param product_rate_plan_id The ID of the product-rate-plan
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
    # @option opts [Integer] :offset The offset from the first taxation-link to return. (default to 0)
    # @option opts [Integer] :records The maximum number of taxation-links to return. (default to 10)
    # @option opts [String] :order_by Specify a field used to order the result set. (default to created)
    # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC. (default to DESC)
    # @option opts [BOOLEAN] :include_retired Whether retired products should be returned. (default to true)
    # @return [TaxationLinkPagedMetadata]
    def get_taxation_link_by_product_rate_plan(product_rate_plan_id, opts = {})
      data, _status_code, _headers = get_taxation_link_by_product_rate_plan_with_http_info(product_rate_plan_id, opts)
      return data
    end

    # Returns a collection of taxation-links, specified by the product-rate-plan-ID parameter. By default 10 values are returned. Records are returned in natural order.
    # {\&quot;nickname\&quot;:\&quot;Retrieve by rate-plan\&quot;,\&quot;response\&quot;:\&quot;getTaxationLinkByPRPID.html\&quot;}
    # @param product_rate_plan_id The ID of the product-rate-plan
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
    # @option opts [Integer] :offset The offset from the first taxation-link to return.
    # @option opts [Integer] :records The maximum number of taxation-links to return.
    # @option opts [String] :order_by Specify a field used to order the result set.
    # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
    # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
    # @return [Array<(TaxationLinkPagedMetadata, Fixnum, Hash)>] TaxationLinkPagedMetadata data, response status code and response headers
    def get_taxation_link_by_product_rate_plan_with_http_info(product_rate_plan_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TaxationlinksApi.get_taxation_link_by_product_rate_plan ..."
      end
      # verify the required parameter 'product_rate_plan_id' is set
      if @api_client.config.client_side_validation && product_rate_plan_id.nil?
        fail ArgumentError, "Missing the required parameter 'product_rate_plan_id' when calling TaxationlinksApi.get_taxation_link_by_product_rate_plan"
      end
      if @api_client.config.client_side_validation && opts[:'order'] && !['ASC', 'DESC'].include?(opts[:'order'])
        fail ArgumentError, 'invalid value for "order", must be one of ASC, DESC'
      end
      # resource path
      local_var_path = "/taxation-links/product-rate-plan/{product-rate-plan-ID}".sub('{' + 'product-rate-plan-ID' + '}', product_rate_plan_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'organizations'] = @api_client.build_collection_param(opts[:'organizations'], :multi) if !opts[:'organizations'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'records'] = opts[:'records'] if !opts[:'records'].nil?
      query_params[:'order_by'] = opts[:'order_by'] if !opts[:'order_by'].nil?
      query_params[:'order'] = opts[:'order'] if !opts[:'order'].nil?
      query_params[:'include_retired'] = opts[:'include_retired'] if !opts[:'include_retired'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json; charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['text/plain'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TaxationLinkPagedMetadata')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TaxationlinksApi#get_taxation_link_by_product_rate_plan\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Returns a collection of taxation-links, specified by the taxation-strategy-ID parameter. By default 10 values are returned. Records are returned in natural order.
    # {\"nickname\":\"Retrieve by taxation strategy\",\"response\":\"getTaxationLinkByTSID.html\"}
    # @param taxation_strategy_id The ID of the taxation-strategy
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
    # @option opts [Integer] :offset The offset from the first taxation-link to return. (default to 0)
    # @option opts [Integer] :records The maximum number of taxation-links to return. (default to 10)
    # @option opts [String] :order_by Specify a field used to order the result set. (default to created)
    # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC. (default to DESC)
    # @option opts [BOOLEAN] :include_retired Whether retired products should be returned. (default to true)
    # @return [TaxationLinkPagedMetadata]
    def get_taxation_link_by_taxation_strategy(taxation_strategy_id, opts = {})
      data, _status_code, _headers = get_taxation_link_by_taxation_strategy_with_http_info(taxation_strategy_id, opts)
      return data
    end

    # Returns a collection of taxation-links, specified by the taxation-strategy-ID parameter. By default 10 values are returned. Records are returned in natural order.
    # {\&quot;nickname\&quot;:\&quot;Retrieve by taxation strategy\&quot;,\&quot;response\&quot;:\&quot;getTaxationLinkByTSID.html\&quot;}
    # @param taxation_strategy_id The ID of the taxation-strategy
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :organizations A list of organization-IDs used to restrict the scope of API calls.
    # @option opts [Integer] :offset The offset from the first taxation-link to return.
    # @option opts [Integer] :records The maximum number of taxation-links to return.
    # @option opts [String] :order_by Specify a field used to order the result set.
    # @option opts [String] :order Ihe direction of any ordering, either ASC or DESC.
    # @option opts [BOOLEAN] :include_retired Whether retired products should be returned.
    # @return [Array<(TaxationLinkPagedMetadata, Fixnum, Hash)>] TaxationLinkPagedMetadata data, response status code and response headers
    def get_taxation_link_by_taxation_strategy_with_http_info(taxation_strategy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TaxationlinksApi.get_taxation_link_by_taxation_strategy ..."
      end
      # verify the required parameter 'taxation_strategy_id' is set
      if @api_client.config.client_side_validation && taxation_strategy_id.nil?
        fail ArgumentError, "Missing the required parameter 'taxation_strategy_id' when calling TaxationlinksApi.get_taxation_link_by_taxation_strategy"
      end
      if @api_client.config.client_side_validation && opts[:'order'] && !['ASC', 'DESC'].include?(opts[:'order'])
        fail ArgumentError, 'invalid value for "order", must be one of ASC, DESC'
      end
      # resource path
      local_var_path = "/taxation-links/taxation-strategy/{taxation-strategy-ID}".sub('{' + 'taxation-strategy-ID' + '}', taxation_strategy_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'organizations'] = @api_client.build_collection_param(opts[:'organizations'], :multi) if !opts[:'organizations'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'records'] = opts[:'records'] if !opts[:'records'].nil?
      query_params[:'order_by'] = opts[:'order_by'] if !opts[:'order_by'].nil?
      query_params[:'order'] = opts[:'order'] if !opts[:'order'].nil?
      query_params[:'include_retired'] = opts[:'include_retired'] if !opts[:'include_retired'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json; charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['text/plain'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TaxationLinkPagedMetadata')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TaxationlinksApi#get_taxation_link_by_taxation_strategy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update
    # {\"nickname\":\"Change taxation linked to rate-plan\",\"request\":\"updateTaxationLinkRequest.html\",\"response\":\"updateTaxationLinkResponse.html\"}
    # @param taxation_link The taxation-link object to be updated.
    # @param [Hash] opts the optional parameters
    # @return [TaxationLinkPagedMetadata]
    def update_taxation_link(taxation_link, opts = {})
      data, _status_code, _headers = update_taxation_link_with_http_info(taxation_link, opts)
      return data
    end

    # Update
    # {\&quot;nickname\&quot;:\&quot;Change taxation linked to rate-plan\&quot;,\&quot;request\&quot;:\&quot;updateTaxationLinkRequest.html\&quot;,\&quot;response\&quot;:\&quot;updateTaxationLinkResponse.html\&quot;}
    # @param taxation_link The taxation-link object to be updated.
    # @param [Hash] opts the optional parameters
    # @return [Array<(TaxationLinkPagedMetadata, Fixnum, Hash)>] TaxationLinkPagedMetadata data, response status code and response headers
    def update_taxation_link_with_http_info(taxation_link, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TaxationlinksApi.update_taxation_link ..."
      end
      # verify the required parameter 'taxation_link' is set
      if @api_client.config.client_side_validation && taxation_link.nil?
        fail ArgumentError, "Missing the required parameter 'taxation_link' when calling TaxationlinksApi.update_taxation_link"
      end
      # resource path
      local_var_path = "/taxation-links"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/xml', 'application/xml', 'application/json; charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json; charset=utf-8'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(taxation_link)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TaxationLinkPagedMetadata')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TaxationlinksApi#update_taxation_link\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
